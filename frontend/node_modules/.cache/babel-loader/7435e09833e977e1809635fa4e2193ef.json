{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\giuse\\\\Documents\\\\GitHub\\\\chat-application\\\\frontend\\\\src\\\\components\\\\Chat\\\\Chat.js\";\nimport React, { useState, useEffect } from \"react\";\nimport queryString from \"query-string\";\nimport io from \"socket.io-client\"; //import css\n\nimport \"./Chat.css\";\nimport InfoBar from \"../InfoBar\";\nlet socket;\n\nconst Chat = () => {\n  const [name, setName] = useState(\"\");\n  const [room, setRoom] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n  const ENDPOINT = \"localhost:5000\";\n  useEffect(() => {\n    const {\n      name,\n      room\n    } = queryString.parse(location.search);\n    socket = io(ENDPOINT);\n    setName(name);\n    setRoom(room);\n    socket.emit(\"join\", {\n      name,\n      room\n    }, () => {});\n    return () => {\n      socket.emit(\"disconnect\");\n      socket.off();\n    };\n  }, [ENDPOINT, location.search]);\n  useEffect(() => {\n    socket.on(\"message\", () => {\n      setMessages([...messages, message]);\n    });\n  }, [messages]); // function for sending messages\n\n  const sendMessage = event => {\n    event.preventDefault();\n\n    if (message) {\n      socket.emit(\"sendMessage\", message, () => setMessage(\"\"));\n    }\n  };\n\n  console.log(message, messages);\n  return React.createElement(\"div\", {\n    className: \"outerContainer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(InfoBar, {\n    room: room,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }), React.createElement(Messages, {\n    messages: messages,\n    name: name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }), React.createElement(Input, {\n    message: message,\n    setMessage: setMessage,\n    sendMessage: sendMessage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  })), React.createElement(TextContainer, {\n    users: users,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }));\n};\n\nexport default Chat;","map":{"version":3,"sources":["C:/Users/giuse/Documents/GitHub/chat-application/frontend/src/components/Chat/Chat.js"],"names":["React","useState","useEffect","queryString","io","InfoBar","socket","Chat","name","setName","room","setRoom","message","setMessage","messages","setMessages","ENDPOINT","parse","location","search","emit","off","on","sendMessage","event","preventDefault","console","log","users"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA0C,OAA1C;AACA,OAAOC,WAAP,MAAwB,cAAxB;AACA,OAAOC,EAAP,MAAe,kBAAf,C,CAEA;;AACA,OAAO,YAAP;AACA,OAAOC,OAAP,MAAoB,YAApB;AAEA,IAAIC,MAAJ;;AAEA,MAAMC,IAAI,GAAG,MAAM;AACf,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACS,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACW,OAAD,EAAUC,UAAV,IAAwBZ,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACa,QAAD,EAAWC,WAAX,IAA0Bd,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAMe,QAAQ,GAAG,gBAAjB;AACAd,EAAAA,SAAS,CAAC,MAAK;AACX,UAAM;AAAEM,MAAAA,IAAF;AAAQE,MAAAA;AAAR,QAAgBP,WAAW,CAACc,KAAZ,CAAkBC,QAAQ,CAACC,MAA3B,CAAtB;AAEAb,IAAAA,MAAM,GAAGF,EAAE,CAACY,QAAD,CAAX;AAEAP,IAAAA,OAAO,CAACD,IAAD,CAAP;AACAG,IAAAA,OAAO,CAACD,IAAD,CAAP;AAEDJ,IAAAA,MAAM,CAACc,IAAP,CAAY,MAAZ,EAAoB;AAAEZ,MAAAA,IAAF;AAAQE,MAAAA;AAAR,KAApB,EAAoC,MAAM,CAEzC,CAFD;AAIA,WAAO,MAAM;AACTJ,MAAAA,MAAM,CAACc,IAAP,CAAY,YAAZ;AAEAd,MAAAA,MAAM,CAACe,GAAP;AACH,KAJD;AAKF,GAjBQ,EAiBN,CAACL,QAAD,EAAWE,QAAQ,CAACC,MAApB,CAjBM,CAAT;AAmBAjB,EAAAA,SAAS,CAAC,MAAM;AACZI,IAAAA,MAAM,CAACgB,EAAP,CAAU,SAAV,EAAqB,MAAM;AACvBP,MAAAA,WAAW,CAAC,CAAC,GAAGD,QAAJ,EAAcF,OAAd,CAAD,CAAX;AACH,KAFD;AAGH,GAJQ,EAIN,CAACE,QAAD,CAJM,CAAT,CAzBe,CA+Bf;;AACA,QAAMS,WAAW,GAAIC,KAAD,IAAW;AAC3BA,IAAAA,KAAK,CAACC,cAAN;;AAEA,QAAGb,OAAH,EAAY;AACRN,MAAAA,MAAM,CAACc,IAAP,CAAY,aAAZ,EAA2BR,OAA3B,EAAoC,MAAMC,UAAU,CAAC,EAAD,CAApD;AACH;AACJ,GAND;;AAQAa,EAAAA,OAAO,CAACC,GAAR,CAAYf,OAAZ,EAAqBE,QAArB;AAEA,SACI;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,OAAD;AAAS,IAAA,IAAI,EAAEJ,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI,oBAAC,QAAD;AAAU,IAAA,QAAQ,EAAEI,QAApB;AAA8B,IAAA,IAAI,EAAEN,IAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAGI,oBAAC,KAAD;AAAO,IAAA,OAAO,EAAEI,OAAhB;AAAyB,IAAA,UAAU,EAAEC,UAArC;AAAiD,IAAA,WAAW,EAAEU,WAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,CADF,EAME,oBAAC,aAAD;AAAe,IAAA,KAAK,EAAEK,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,CADJ;AAUH,CApDD;;AAsDA,eAAerB,IAAf","sourcesContent":["import React, { useState, useEffect} from \"react\";\r\nimport queryString from \"query-string\";\r\nimport io from \"socket.io-client\";\r\n\r\n//import css\r\nimport \"./Chat.css\";\r\nimport InfoBar from \"../InfoBar\";\r\n\r\nlet socket;\r\n\r\nconst Chat = () => {\r\n    const [name, setName] = useState(\"\");\r\n    const [room, setRoom] = useState(\"\");\r\n    const [message, setMessage] = useState(\"\");\r\n    const [messages, setMessages] = useState([]);\r\n    const ENDPOINT = \"localhost:5000\"\r\n    useEffect(() =>{\r\n        const { name, room} = queryString.parse(location.search);\r\n\r\n        socket = io(ENDPOINT);\r\n\r\n        setName(name);\r\n        setRoom(room);\r\n\r\n       socket.emit(\"join\", { name, room }, () => {\r\n\r\n       });\r\n\r\n       return () => {\r\n           socket.emit(\"disconnect\");\r\n\r\n           socket.off();\r\n       }\r\n    }, [ENDPOINT, location.search]);\r\n\r\n    useEffect(() => {\r\n        socket.on(\"message\", () => {\r\n            setMessages([...messages, message]);\r\n        })\r\n    }, [messages]);\r\n\r\n    // function for sending messages\r\n    const sendMessage = (event) => {\r\n        event.preventDefault();\r\n\r\n        if(message) {\r\n            socket.emit(\"sendMessage\", message, () => setMessage(\"\"));\r\n        }\r\n    }\r\n\r\n    console.log(message, messages);\r\n\r\n    return (\r\n        <div className=\"outerContainer\">\r\n          <div className=\"container\">\r\n              <InfoBar room={room} />\r\n              <Messages messages={messages} name={name} />\r\n              <Input message={message} setMessage={setMessage} sendMessage={sendMessage} />\r\n          </div>\r\n          <TextContainer users={users}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Chat;"]},"metadata":{},"sourceType":"module"}